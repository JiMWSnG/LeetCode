package javaSrc.Hulu;

/**
 * @author Jim Wang
 * @create 2017-09-21 21:04
 **/
public class Q4 {
    /**
     * Q4 架构师组件分离术
     时间限制：C/C++语言 1000MS；其他语言 3000MS
     内存限制：C/C++语言 8192KB；其他语言 532480KB
     题目描述：
     小明作为架构师，新加入Hulu，接收一个复杂应用的改造任务。该应用由N个组件（Component）组成，分别由两个不同的小组负责。小明的任务是把这些组件分解为两个不相交的非空集合，然后将每个集合分配给两个小组继续改造。组件之间有依赖关系，有的亲密，适合放在一起开发；有的疏远可以放在不同小组开发。我们以S(i, j) >= 0表示组件i和j之间的亲密程度，亲密度为0表示两个组件完全独立。分解出来的两个集合之间总的亲密程度要尽量的小，总亲密度定义为横跨两个集合的组件对亲密度之和。现在给定N个组件，以及组件之间的亲密程度S(i, j)，请帮助小明分割他们。

     输入
     第一行两个整数，分别为N(<= 100)表示组件的个数，M表示有非0亲密度的组件对个数。
     接下来是M行，每行三个整数 i，j和 s，表示组件i与j之间的亲密度为s，即S(i, j) = s。不在这里出现的组件对之间的亲密度为0。
     提示：本题共有10组测试样例，其中3组测试样例中，每组样例的非零亲密度全部相同（例如，全为1，或者全为2）。
     输出
     分割之后横跨两个集合的组件对。假设一共有S个组件对横跨两个集合，即<F1, E1>, <F2, E2>, …, <Fs, Es>；每个组件对请按Fi < Ei的顺序给出，所有组件对按Fi由小到大的顺序输出。

     样例输入
     10 14
     1 2 5
     1 3 5
     1 5 5
     2 4 5
     2 5 5
     3 4 5
     4 6 5
     5 6 5
     6 7 4
     7 8 5
     7 9 5
     7 10 5
     8 9 5
     8 10 5
     样例输出
     6 7
     */
}
